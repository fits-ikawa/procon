{
    "Paiza template": {
        "scope": "rust",
        "prefix": "paiza",
        "body": [
            "fn main() {",
            "    println!(\"XXXXXX\");",
            "}",
        ],
    },
    "AtCoder template": {
        "scope": "rust",
        "prefix": "atcoder",
        "body": [
            "#![allow(unused_imports)]",
            "use itertools::*;",
            "use itertools_num::*;",
            "use maplit::*;",
            "use num::integer::{Integer, Roots};",
            "use proconio::{marker::*, *};",
            "use std::cmp::{Ordering::*, Reverse};",
            "use std::collections::*;",
            "use superslice::*;",
            "",
            "#[allow(unused_macros)]",
            "macro_rules! debug {",
            "    ($(\\$a:expr),* $(,)*) => {",
            "        #[cfg(debug_assertions)]",
            "        eprintln!(concat!($(\"| \", stringify!(\\$a), \"={:?} \"),*, \"|\"), $(&\\$a),*);",
            "    };",
            "}",
            "",
            "#[allow(clippy::needless_range_loop)]",
            "#[fastout]",
            "fn main() {",
            "    input! {",
            "        n: usize, m: usize,",
            "        vec: [usize; n],",
            "        mat: [[usize; m]; n],",
            "        mat: [(usize, usize); n],",
            "    }",
            "",
            "    println!(\"{}\", 0);",
            "}",
        ],
    },
    "Derive for hashable": {
        "scope": "rust",
        "prefix": "hashable",
        "body": [
            "#[derive(Debug, Clone, Copy, Hash, PartialEq, Eq)]",
        ],
    },
    "Use for petgraph": {
        "scope": "rust",
        "prefix": "usepetgraph",
        "body": [
            "use petgraph::{algo::*, graph::*, prelude::*, visit::*, *};",
        ],
    }
}
